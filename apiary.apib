HOST: http://test.babelroom.com/api/v1/

--- BabelRoom API ---
---
Welcome to the our sample API documentation. All comments can be written in (support [Markdown](http://daringfireball.net/projects/markdown/syntax) syntax)
---

--
Authentication
APIs for authentication
--
POST signup
> Content-Type: application/json; charset=utf-8
{}
< 200
< Content-Type: application/json; charset=utf-8
{}

..//++apiary--
function signup(self, req, res, match, opts)
{
    self.db.query("INSERT INTO my.users (name) VALUES ("+self.e(req.body.name)+")", [], function(err, rows, fields){
        if (err) return he.db_error(res, err);
        res.send(rows);     // TMP todo -- is this wise?
        res.end();
        });
}

..//++apiary--
*/
Retrieve user data associated with active cookie session. The empty set is returned if there is no valid active cookie session.
GET login
< 200
< Content-Type: application/json; charset=utf-8
{}
+++++
{"user": {"id":3, "email_address":"apitest@example.com", "email":"apitest@example.com", "name":"API", "last_name":"Test"}}

Login. If successful set a new cookie session.
POST login
> Content-Type: application/json; charset=utf-8
{"login":"apitest@example.com", "password":"default"}
< 200
< Content-Type: application/json; charset=utf-8
{"user": {"id":3, "email_address":"apitest@example.com", "email":"apitest@example.com", "name":"API", "last_name":"Test"}}
+++++
{}

Logout. Destroy the currently active cookie session
DELETE login
< 200
< Content-Type: application/json; charset=utf-8
{}

Logout. Synonymous with DELETE login
POST logout
< 200
< Content-Type: application/json; charset=utf-8
{}

Retrieve the superset of context for the currently logged in user, the specified conference and any associated invitation.
GET invitation/apitest
< 200
< Content-Type: application/json; charset=utf-8
{"data": {
    "user_id":3,
    "email_address":"apitest@example.com",
    "email":"apitest@example.com",
    "first_name":"API",
    "last_name":"Test",
    "conference_id":3,
    "conference_name":"API Test Conference",
    "conference_config":"<internal data>",
    "conference_introduction":"API Test Conference",
    "conference_uri":"apitest",
    "conference_access_config":"{}",
    "conference_skin_id":1,
    "invitation_id":2,
    "pin":"444444",
    "role":"Host",
    "myAccessInfo":"<internal data>",
    }
}

POST add_self
> Content-Type: application/json; charset=utf-8
{}
< 201
< Content-Type: application/json; charset=utf-8
{}

POST add_participant
> Content-Type: application/json; charset=utf-8
{}
< 201
< Content-Type: application/json; charset=utf-8
{}

--
Server
APIs for server version and status.
--
Server status. This is mainly for use by automated server monitoring tools.
GET status
< 200
< Content-Type: application/json; charset=utf-8
{
  "status": "OK"
}

Server version. 
GET version
< 200
< Content-Type: application/json; charset=utf-8
{
  "major": "2",
  "minor": "37",
  "commit": "201",
  "stamp": "2.37.201"
}

--
General Purpose Resources
These resources are automatically generated from
[https://github.com/babelroom/clouds/blob/master/gen/schema/main.sch](https://github.com/babelroom/clouds/blob/master/gen/schema/main.sch)
--

GET users/{id}{?c}
< 200
< Content-Type: application/json; charset=utf-8
{"name": "First","email_address": "mail@example.com","last_name": "Last","company": "Fastbuck, Inc.","email": "mail@example.com","origin_data": "Origin System (optional)","origin_id": 37}
+++++
< 403
{"error":{"code":403,"text":"Access Denied"}}

GET conferences/2{?c}
< 200
< Content-Type: application/json; charset=utf-8
{"name": "My Conference","uri": "myuri","introduction": "My summary, introduction or description","access_config": "{}","origin_data": "Origin data (optional)","origin_id": 37}
+++++
< 403
{"error":{"code":403,"text":"Access Denied"}}

POST conferences
> Content-Type: application/json; charset=utf-8
{"name": "My Conference","introduction": "My summary, introduction or description","access_config": "{}","origin_data": "Origin data (optional)","origin_id": 37}
< 201
< Content-Type: application/json; charset=utf-8
{}
+++++
< 401
{"error":{"code": 401,"text": "HTTP Basic Auth or Cookie Session Required" }}

PUT /conferences/2
> Content-Type: application/json; charset=utf-8
{"name": "My Conference","introduction": "My summary, introduction or description","access_config": "{}","origin_data": "Origin data (optional)","origin_id": 37}
< 200
< Content-Type: application/json; charset=utf-8
{}
+++++
< 401
{"error":{"code": 401,"text": "HTTP Basic Auth or Cookie Session Required" }}

DELETE conferences/2
< 200
< Content-Type: application/json; charset=utf-8
{}
+++++
< 401
{"error":{"code": 401,"text": "HTTP Basic Auth or Cookie Session Required" }}

POST /avatar
> Content-Type: application/json; charset=utf-8
{"upload_url": "http://files.example.com/file/my_master_avatar.png"}
< 201
< Content-Type: application/json; charset=utf-8
{}
+++++
< 401
{"error":{"code": 401,"text": "HTTP Basic Auth or Cookie Session Required" }}
