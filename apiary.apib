HOST: http://test.babelroom.com/api/v1/

--- BabelRoom API ---
---
Welcome to the our sample API documentation. All comments can be written in (support [Markdown](http://daringfireball.net/projects/markdown/syntax) syntax)
---

Retrieve user data associated with active cookie session. The empty set is returned if there is no valid active cookie session.
GET login
< 200
< Content-Type: application/json; charset=utf-8
{}
+++++
< 200
< Content-Type: application/json; charset=utf-8
{"user": {"id":3, "email_address":"apitest@example.com", "email":"apitest@example.com", "name":"API", "last_name":"Test"}}

Login. If successful set a new cookie session.
POST login
> Content-Type: application/json; charset=utf-8
{"login":"apitest@example.com", "password":"default"}
< 200
< Content-Type: application/json; charset=utf-8
{"user": {"id":3, "email_address":"apitest@example.com", "email":"apitest@example.com", "name":"API", "last_name":"Test"}}
+++++
< 200
< Content-Type: application/json; charset=utf-8
{}

Logout. Destroy the currently active cookie session
DELETE login
< 200
< Content-Type: application/json; charset=utf-8
{}

Logout. Synonymous with DELETE login
POST logout
< 200
< Content-Type: application/json; charset=utf-8
{}

Retrieve the superset of context for the currently logged in user, the specified conference and any associated invitation.
The conference uri is appended to the end of the REST resource path /api/v1/invitation
GET invitation/apitest
< 200
< Content-Type: application/json; charset=utf-8
{"data": {
    "user_id":3,
    "email_address":"apitest@example.com",
    "email":"apitest@example.com",
    "first_name":"API",
    "last_name":"Test",
    "conference_id":3,
    "conference_name":"API Test Conference",
    "conference_config":"<internal data>",
    "conference_introduction":"API Test Conference",
    "conference_uri":"apitest",
    "conference_access_config":"{}",
    "conference_skin_id":1,
    "invitation_id":2,
    "pin":"444444",
    "role":"Host",
    "myAccessInfo":"<internal data>",
    }
}

Add the current user as a conference participant
The conference uri is appended to the end of the REST resource path /api/v1/add_self
POST add_self/apitest
> Content-Type: application/json; charset=utf-8
{
    "user": {
        "name" => "API",
        "last_name" => "Test",
        "email" => "apitest@example.com",
        "origin_data" => "Origin System Name",
        "origin_id" => 37,
        "phone" => "650.555.1212",
        },
    "invitation": {
        },
    "avatar_url": "http://example.com/path/to/my/avatar"
}
< 200
< Content-Type: application/json; charset=utf-8
{}

Add another user as a conference participant
The conference uri is appended to the end of the REST resource path /api/v1/add_participant
POST add_participant/apitest
< Authorization: Basic N2NiNTI0ZmI2NGViNGUyNmQxYjIzM2QyZjI5M2QxMGM6
> Content-Type: application/json; charset=utf-8
{
    "user": {
        "name" => "API",
        "last_name" => "Test",
        "email" => "apitest@example.com",
        "origin_data" => "Origin System Name",
        "origin_id" => 37,
        "phone" => "650.555.1212",
        },
    "invitation": {
        "role":"Host",
        },
    "avatar_url": "http://example.com/path/to/my/avatar",
    "return_token":true
}
< 200
< Content-Type: application/json; charset=utf-8
{}

--
Server
APIs for server version and status.
--
Server status. This is mainly for use by automated server monitoring tools.
GET status
< 200
< Content-Type: application/json; charset=utf-8
{
  "status": "OK"
}

Server version. 
GET version
< 200
< Content-Type: application/json; charset=utf-8
{
  "major": "2",
  "minor": "37",
  "commit": "201",
  "stamp": "2.37.201"
}

--
General Purpose Resources
These resources are automatically generated from
[https://github.com/babelroom/clouds/blob/master/gen/schema/main.sch](https://github.com/babelroom/clouds/blob/master/gen/schema/main.sch)
--

GET users/3{?c}
> Authorization: Basic N2NiNTI0ZmI2NGViNGUyNmQxYjIzM2QyZjI5M2QxMGM6
< 200
< Content-Type: application/json; charset=utf-8
{"name": "First","email_address": "mail@example.com","last_name": "Last","company": "Fastbuck, Inc.","email": "mail@example.com","origin_data": "Origin System (optional)","origin_id": 37}
+++++
< 403
{"error":{"code":403,"text":"Access Denied"}}

GET conferences/3{?c}
> Authorization: Basic N2NiNTI0ZmI2NGViNGUyNmQxYjIzM2QyZjI5M2QxMGM6
< 200
< Content-Type: application/json; charset=utf-8
{"name": "My Conference","uri": "myuri","introduction": "My summary, introduction or description","access_config": "{}","origin_data": "Origin data (optional)","origin_id": 37}
+++++
< 403
{"error":{"code":403,"text":"Access Denied"}}

POST conferences
> Content-Type: application/json; charset=utf-8
{"name": "My Conference","introduction": "My summary, introduction or description","access_config": "{}","origin_data": "Origin data (optional)","origin_id": 37}
> Authorization: Basic N2NiNTI0ZmI2NGViNGUyNmQxYjIzM2QyZjI5M2QxMGM6
< 201
< Content-Type: application/json; charset=utf-8
{}
+++++
> Authorization: Basic N2NiNTI0ZmI2NGViNGUyNmQxYjIzM2QyZjI5M2QxMGM6
< 401
{"error":{"code": 401,"text": "HTTP Basic Auth or Cookie Session Required" }}

PUT /conferences/3
> Content-Type: application/json; charset=utf-8
{"name": "My Conference","introduction": "My summary, introduction or description","access_config": "{}","origin_data": "Origin data (optional)","origin_id": 37}
> Authorization: Basic N2NiNTI0ZmI2NGViNGUyNmQxYjIzM2QyZjI5M2QxMGM6
< 200
< Content-Type: application/json; charset=utf-8
{}
+++++
> Authorization: Basic N2NiNTI0ZmI2NGViNGUyNmQxYjIzM2QyZjI5M2QxMGM6
< 401
{"error":{"code": 401,"text": "HTTP Basic Auth or Cookie Session Required" }}

DELETE conferences/3
> Authorization: Basic N2NiNTI0ZmI2NGViNGUyNmQxYjIzM2QyZjI5M2QxMGM6
< 200
< Content-Type: application/json; charset=utf-8
{}
+++++
< 401
{"error":{"code": 401,"text": "HTTP Basic Auth or Cookie Session Required" }}

POST /avatar
> Content-Type: application/json; charset=utf-8
{"upload_url": "http://files.example.com/file/my_master_avatar.png"}
> Authorization: Basic N2NiNTI0ZmI2NGViNGUyNmQxYjIzM2QyZjI5M2QxMGM6
< 201
< Content-Type: application/json; charset=utf-8
{}
+++++
> Authorization: Basic N2NiNTI0ZmI2NGViNGUyNmQxYjIzM2QyZjI5M2QxMGM6
< 401
{"error":{"code": 401,"text": "HTTP Basic Auth or Cookie Session Required" }}
