{
# ---
# Local binding information
# ---
Listeners = {
    {
#   LocalAddress is optional -- will bind to all IP's if omitted
#        LocalAddress=localhost
#        Port=80
        LocalAddress=127.0.0.1
        Port=8888
    }
#    {
#        Port=81
#    }
#    {
#        Port=8081
#    }
}

#DoTrace=1
#DoVerboseTrace=0    # implies 'DoTrace'

# ---
# How to handle http requests with various different
# MIME types
# ---
Handlers= {
#	x-application/x-nic-v5-rpc-encoding Wapp tfile=dev_local.cfg
##	x-application/x-perl-server-pages	libWpsp.so
#	x-application/x-krak-source	Wksp reuses=10
#	x-application/x-krak-server-pages	Wksp reuses=10 script
#	x-application/x-nic-v5-rpc-encoding libWpsp.so reuses=1000 defaultpspfile=pub/tag.v5adapter

    # --
    # Event bus for conferences
    # ---
	*									Webus uri=/conference/ dir=/var/estream/data/q connection_label=:es001-%s ts_interval=20
	*									Webus uri=/fs/
	*									WREST uri=/rest/ dir=/var/estream/data/fs_map
    *                                   WREST uri=/cs_media/ dir=/cs_media

    # ---
    # reminder to restrict by policy
    # ---
#    Webus uriconnect_policy=Foo

    # ---
    # Note we only challenge and check authorization for the final (html) 
    # uri's ... that's a regular browser page request. This means REST requests are not
    # validated for authorization (we don't impose that on REST clients). Also means those 
    # requests will run faster
    # ---
#	*									Wauth realm=eStream username=jjj password=jjj

    # ---
    # serve regular browser pages
    # ---
	*									Wfile

    # --- not found, give up
    *                                   Wset response_code=404
	}

# ---
# This server shares the same site configuration across all sites.
# ---
IsMultiSite=0
SiteFiles= {
	../conf/CommonSite.conf
	}

# ---
# Turn on IP netmasking order by most specific to least specific
# Format of access control string is name of netmask, address, address mask
# and either trust or reject connection
# Syntax of access control string:
#   comment = "#" *(character)
#   name = 1*(character)
#   triple = 1*3(digit)
#   dotted-decimal-address = triple "." triple "." triple "." triple
#   netmask = 0*1(comment) |
#             name, dotted-decimal-address,
#             dotted-decimal-address, ("reject", "trust") 0*1(comment)
# ---
#AccessControlEnabled=0 AccessControlStringList=
#    {
#
#    # gold
#    gold, 192.168.2.12, 255.255.255.255, trust
#
#    # platnium
#    #platnium, 152.178.2.18, 255.255.255.255, trust # specific
#
#    # silver
#    silver, 192.168.2.11, 255.255.255.255, trust # specific
#
#    # nvision
#    nvision, 192.168.2.0, 255.255.255.0, trust # less specific
#
#    # world
#    world, 0.0.0.0, 0.0.0.0, reject
#
#    }

# ---
# Reuse Connection
# ---
ReuseConnection=1

# ---
# Run a thread pool
# ---
DoThreadPool=1
MaxConnections=1000

# ---
# Network options:
# 	poll timeout: the length of time new or kept-alive connections will wait
#		before abandoning the connection.
# ---
# NOTE: Never set this less than 20 because of a hard coded
# value (MAX_TIME) in NicLib/ConnPool.cpp - 30 is good JR 12/5
PollTimeout=30

# ---
# Common logging
# ---
LogFile=/var/log/br/estream_access.log
# LogFormat=[$d] $h $m $c($i) $u $s ($p)\n
LogFormat=[$d] $m $u $c $s ($S bytes)\n

#SSLConf=
#	{
#		{
#		SSLOn=0
#		SSLVersion=23
#
#		# Client certificate verification, 
#		#	0=No verification performed
#		#	1=Certificate is verified, but not mandatory
#		#	2=Certificate must be present
#		SSLVerificationCode 0
#
#		SSLVerifyDepth=10
#
#		PrivateKeyFile=../ssl/private/www.domainname.com.key
#		CACertificatePath=../ssl/certs
#		CACertificateFile=../ssl/CA/client-rootcerts.pem
#		CertificateFile=../ssl/certs/www.domainname.com.cert
#
#		# DebugFile output, filename or '##STDERR##' or '##STDOUT##'
#		#	DebugFile "##STDERR##"
##		DebugFile=##STDOUT##
#
#		# List of acceptable ciphers, disable to allow all valid cipher suites.
##		CipherList="MD5_NULL"
#		}
#	}

PidFile=/var/run/estream.pid
}

