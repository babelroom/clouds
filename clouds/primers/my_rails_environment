open F, ">$R->{file}" or die;
my $default = $R->{default};
my $landing = length($R->{landing}) ? $R->{landing} : $default;
my $rooms = length($R->{rooms}) ? $R->{rooms} : $default;
my $api = length($R->{api}) ? $R->{api} : $default;
print F <<__EOT__
# -- automatically created by BR primer MODIFICATIONS MAY BE LOST

# Settings specified here will take precedence over those in config/environment.rb

# The production environment is meant for finished, "live" apps.
# Code is not reloaded between requests
config.cache_classes = true

# Full error reports are disabled and caching is turned on
config.action_controller.consider_all_requests_local = false
config.action_controller.perform_caching             = true
config.action_view.cache_template_loading            = true

# See everything in the log (default is :info)
# config.log_level = :debug

# Use a different logger for distributed setups
# config.logger = SyslogLogger.new

# Use a different cache store in production
# config.cache_store = :mem_cache_store

# Enable serving of images, stylesheets, and javascripts from an asset server
# config.action_controller.asset_host = "http://assets.example.com"

# Disable delivery errors, bad email addresses will be ignored
# config.action_mailer.raise_delivery_errors = false

# Enable threaded mode
# config.threadsafe!

\$babelroom = {}
\$babelroom[:environment] = ''
__EOT__
;
if (length($R->{recurly})) { print F <<__EOT__
\$babelroom[:new_account_prefix] = 'P1-'    # confirm this ...
\$babelroom[:subscribe_url] = 'https://$R->{recurly}.recurly.com/subscribe'
\$babelroom[:hosted_billing_url] = 'https://$R->{recurly}.recurly.com'
__EOT__
; }
print F <<__EOT__
\$babelroom[:marcom_url] = '$landing'
\$babelroom[:page_url] = '$rooms'
\$babelroom[:api_url] = '$api'
\$babelroom[:easter] = false
\$babelroom[:cookie_key] = '$R->{cookie_key}'

__EOT__
;
close F;
`chown br:br $R->{file}`;
1

